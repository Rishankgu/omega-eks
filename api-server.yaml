apiVersion: v1
kind: Service
metadata:
  labels:
    app: apiserver
  name: apiserver
spec:
  ports:
    - name: 80-8080
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: apiserver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apiserver
  name: apiserver
spec:
  replicas: 3
  selector:
    matchLabels:
      app: apiserver
  strategy: {}
  template:
    metadata:
      labels:
        app: apiserver
    spec:
      # high availability (multi-az)
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: frontend
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      containers:
        - image: jkplayground/smartbank-api-module:v1.0.0
          name: sba-apiserver
          resources: {}
          # high availability (TCP probe)
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
            initialDelaySeconds: 0
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 0
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 2
          env:
            - name: spring.datasource.url
              value: jdbc:postgresql://postgres:5432/app
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: db
                  key: username
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: db
                  key: password
            - name: spring.application.name
              valueFrom:
                secretKeyRef:
                  name: db
                  key: password
          volumeMounts:
            - name: secret-vol
              mountPath: "/etc/app"
              readOnly: true
      volumes:
        - name: secret-vol
          secret:
            secretName: db

status: {}
